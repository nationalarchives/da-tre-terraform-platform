{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "CloudWatchLogGroupAccess",
            "Effect": "Allow",
            "Action": "logs:CreateLogStream",
            "Resource": "arn:aws:logs:${aws_region}:${account_id}:log-group:${prefix}-*"
        },
        {
            "Sid": "CloudWatchLogStreamAccess",
            "Effect": "Allow",
            "Action": "logs:PutLogEvents",
            "Resource": "arn:aws:logs:${aws_region}:${account_id}:log-group:${prefix}-*:log-stream:*"
        },
        {
            "Sid": "S3Read",
            "Effect": "Allow",
            "Action": "s3:ListBucket",
            "Resource": [
                "arn:aws:s3:::${tf_state}",
                "arn:aws:s3:::${tf_plan_bucket}"
            ]
        },
        {
            "Sid": "S3Write",
            "Effect": "Allow",
            "Action": [
                "s3:PutObject",
                "s3:GetObject",
                "s3:DeleteObject"
            ],
            "Resource": [
                "arn:aws:s3:::${tf_state}/*",
                "arn:aws:s3:::${tf_plan_bucket}/*"
            ]
        },
        {
            "Sid": "dynamoDBReadAndWrite",
            "Effect": "Allow",
            "Action": [
                "dynamodb:PutItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
                "dynamodb:GetItem" 
            ],
            "Resource": [
                "arn:aws:dynamodb:${aws_region}:${account_id}:table/${tf_state}"
            ]
        },
        {
            "Sid": "ParameterStoreGet",
            "Effect": "Allow",
            "Action": "ssm:GetParameters",
            "Resource": "arn:aws:ssm:${aws_region}:${account_id}:parameter/${prefix}-*"
        },
        {
            "Sid": "STSAssume",
            "Effect": "Allow",
            "Action": "sts:AssumeRole",
            "Resource": ${jsonencode(terraform_roles)}
        },
        {
            "Sid": "ECRImageAccess",
            "Effect": "Allow",
            "Action": [
                "ecr:CompleteLayerUpload",
                "ecr:DescribeImages",
                "ecr:DescribeRepositories",
                "ecr:UploadLayerPart",
                "ecr:ListImages",
                "ecr:InitiateLayerUpload",
                "ecr:BatchCheckLayerAvailability",
                "ecr:PutImage"
            ],
            "Resource": "arn:aws:ecr:${aws_region}:${account_id}:repository/${prefix}-*"
        },
        {
            "Sid": "ECRRepoAccess",
            "Effect": "Allow",
            "Action": [
                "ecr:CreateRepository",
                "ecr:GetAuthorizationToken"
            ],
            "Resource": "*"
        },
        {
            "Sid": "CodeArtifactAccess",
            "Effect": "Allow",
            "Action": [
                "codeartifact:CopyPackageVersions",
                "codeartifact:DeletePackageVersions",
                "codeartifact:DescribePackage",
                "codeartifact:DescribePackageVersion",
                "codeartifact:DisposePackageVersions",
                "codeartifact:GetAuthorizationToken",
                "codeartifact:GetPackageVersionAsset",
                "codeartifact:GetPackageVersionReadme",
                "codeartifact:GetRepositoryEndpoint",
                "codeartifact:ListPackages",
                "codeartifact:ListPackageVersionAssets",
                "codeartifact:ListPackageVersionDependencies",
                "codeartifact:ListPackageVersions",
                "codeartifact:PublishPackageVersion",
                "codeartifact:PutPackageMetadata",
                "codeartifact:PutPackageOriginConfiguration",
                "codeartifact:ReadFromRepository",
                "codeartifact:UpdatePackageVersionsStatus"
            ],
            "Resource": [
                "arn:aws:codeartifact:${aws_region}:${account_id}:domain/${prefix}-*",
                "arn:aws:codeartifact:${aws_region}:${account_id}:repository/${prefix}-*/*",
                "arn:aws:codeartifact:${aws_region}:${account_id}:package/${prefix}-*/*/*/*/*"              
            ]
        },
        {
            "Sid": "AllowServiceBearerToken",
            "Effect": "Allow",  
            "Action": "sts:GetServiceBearerToken",
            "Resource": "*"
        }
    ]
}
